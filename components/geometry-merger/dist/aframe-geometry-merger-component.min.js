!function(r){function e(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return r[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var t={};return e.m=r,e.c=t,e.p="",e(0)}([function(r,e,t){THREE.BufferGeometryUtils||t(1),AFRAME.registerComponent("geometry-merger",{schema:{preserveOriginal:{default:!1}},init:function(){var r=[];this.vertexIndex={};var e=this,t=0;this.el.object3D.updateMatrixWorld(),this.el.object3D.traverse(function(n){if("Mesh"===n.type&&n.el!==e.el){for(var o=n.geometry.clone(),a=n;a!==e.el.object3D;)o.applyMatrix4(a.parent.matrix),a=a.parent;r.push(o),meshPositions=n.geometry.getAttribute("position"),e.vertexIndex[n.parent.uuid]=[t,t+meshPositions.count-1],t+=meshPositions.count,e.data.preserveOriginal||n.parent.remove(n)}});var n=THREE.BufferGeometryUtils.mergeBufferGeometries(r);this.mesh=new THREE.Mesh(n),this.el.setObject3D("mesh",this.mesh)}})},function(r,e){THREE.BufferGeometryUtils={computeTangents:function(r){function e(r,e,t){v.fromArray(i,3*r),h.fromArray(i,3*e),p.fromArray(i,3*t),E.fromArray(s,2*r),y.fromArray(s,2*e),g.fromArray(s,2*t);var n=h.x-v.x,o=p.x-v.x,a=h.y-v.y,u=p.y-v.y,f=h.z-v.z,l=p.z-v.z,m=y.x-E.x,A=g.x-E.x,T=y.y-E.y,w=g.y-E.y,R=1/(m*w-A*T);b.set((w*n-T*o)*R,(w*a-T*u)*R,(w*f-T*l)*R),x.set((m*o-A*n)*R,(m*u-A*a)*R,(m*l-A*f)*R),d[r].add(b),d[e].add(b),d[t].add(b),c[r].add(x),c[e].add(x),c[t].add(x)}function t(r){U.fromArray(u,3*r),O.copy(U),z=d[r],j.copy(z),j.sub(U.multiplyScalar(U.dot(z))).normalize(),M.crossVectors(O,z),G=M.dot(c[r]),D=G<0?-1:1,l[4*r]=j.x,l[4*r+1]=j.y,l[4*r+2]=j.z,l[4*r+3]=D}var n=r.index,o=r.attributes;if(null===n||void 0===o.position||void 0===o.normal||void 0===o.uv)return void console.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var a=n.array,i=o.position.array,u=o.normal.array,s=o.uv.array,f=i.length/3;void 0===o.tangent&&r.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*f),4));for(var l=o.tangent.array,d=[],c=[],m=0;m<f;m++)d[m]=new THREE.Vector3,c[m]=new THREE.Vector3;var v=new THREE.Vector3,h=new THREE.Vector3,p=new THREE.Vector3,E=new THREE.Vector2,y=new THREE.Vector2,g=new THREE.Vector2,b=new THREE.Vector3,x=new THREE.Vector3,A=r.groups;0===A.length&&(A=[{start:0,count:a.length}]);for(var m=0,T=A.length;m<T;++m)for(var w=A[m],R=w.start,H=w.count,V=R,B=R+H;V<B;V+=3)e(a[V+0],a[V+1],a[V+2]);for(var D,z,G,j=new THREE.Vector3,M=new THREE.Vector3,U=new THREE.Vector3,O=new THREE.Vector3,m=0,T=A.length;m<T;++m)for(var w=A[m],R=w.start,H=w.count,V=R,B=R+H;V<B;V+=3)t(a[V+0]),t(a[V+1]),t(a[V+2])},mergeBufferGeometries:function(r,e){for(var t=null!==r[0].index,n=new Set(Object.keys(r[0].attributes)),o=new Set(Object.keys(r[0].morphAttributes)),a={},i={},u=new THREE.BufferGeometry,s=0,f=0;f<r.length;++f){var l=r[f];if(t!==(null!==l.index))return null;for(var d in l.attributes){if(!n.has(d))return null;void 0===a[d]&&(a[d]=[]),a[d].push(l.attributes[d])}for(var d in l.morphAttributes){if(!o.has(d))return null;void 0===i[d]&&(i[d]=[]),i[d].push(l.morphAttributes[d])}if(u.userData&&(u.userData.mergedUserData=u.userData.mergedUserData||[],u.userData.mergedUserData.push(l.userData)),e){var c;if(t)c=l.index.count;else{if(void 0===l.attributes.position)return null;c=l.attributes.position.count}u.addGroup(s,c,f),s+=c}}if(t){for(var m=0,v=[],f=0;f<r.length;++f){for(var h=r[f].index,p=0;p<h.count;++p)v.push(h.getX(p)+m);m+=r[f].attributes.position.count}u.setIndex(v)}for(var d in a){var E=this.mergeBufferAttributes(a[d]);if(!E)return null;u.addAttribute(d,E)}for(var d in i){var y=i[d][0].length;if(0===y)break;u.morphAttributes=u.morphAttributes||{},u.morphAttributes[d]=[];for(var f=0;f<y;++f){for(var g=[],p=0;p<i[d].length;++p)g.push(i[d][p][f]);var b=this.mergeBufferAttributes(g);if(!b)return null;u.morphAttributes[d].push(b)}}return u},mergeBufferAttributes:function(r){for(var e,t,n,o=0,a=0;a<r.length;++a){var i=r[a];if(i.isInterleavedBufferAttribute)return null;if(void 0===e&&(e=i.array.constructor),e!==i.array.constructor)return null;if(void 0===t&&(t=i.itemSize),t!==i.itemSize)return null;if(void 0===n&&(n=i.normalized),n!==i.normalized)return null;o+=i.array.length}for(var u=new e(o),s=0,a=0;a<r.length;++a)u.set(r[a].array,s),s+=r[a].array.length;return new THREE.BufferAttribute(u,t,n)}}}]);